show databases;
use teamb-2019winter
show columns from teamb-2019winter;
sho tables;
show tables;
show columns from Tables_in_teamb-2019winter;
show columns from teamb-2019winter;
show columns from users;
\q
show columns from users;
show databases;
\q
show databases
;
use teamb-2019winter
show columns from users;
\q
show databases
;
use teamb-2019winter
show tables;
drop table users;
drop table air_sensor
;
drop table heart_sensor
;
drop table sensor;
drop table sign_state;
show tables;
drop table temp_sensor;
drop table sensor;
drop table users;
show tables;
\q
show databases;
use temb-2019winter;
use teamb-2019winter;
select * from users;
show databases;
use teamb-2019winter;
show tables;
 select * from users;
select * from air_sensor
;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id)
VALUES ('201902171846',1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) VALUES ('201902171846',1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id)
VALUES ('201902171846',1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) VALUES ('201902171846',1,2,3,4,5,6,7,8,9,10,11,12,13,14);
show air_sensor;
show tables;
show fileds;
select * form air_sensor;
select * from air_sensor;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id)
VALUES ('201902171846',1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) VALUES ('201902171846',1.0,2.0,3.0,4.0,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id)
values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id)
values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values ('1902078778','1.0','2','3','4','5','6','7','8','9','10','11','12');
'
;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values ('1902078778','1.0','2','3','4','5','6','7','8','9','10','11','12');
';
show databases;
use teamb-2019winter
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values ('1902078778','1.0','2','3','4','5','6','7','8','9','10','11','12');
'
;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values ('1902078778','1.0','2','3','4','5','6','7','8','9','10','11','12');
';
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
;
'
;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('1902170505,1,2,3,4,5,6,7,8,9,10,11,12,13,14);
;
';
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values(1902078778,1,2,3,4,5,6,7,8,9,10,11,12);
show * columns from air_sensor;
show columns form air_sensor;
show columns from air_sensor;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1','2','3','4','5','6','7','8','9','10','11','12');
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-1707:11:39','1','2','3','4','5','6','7','8','9','10','11','12');
use teamb-2019winter
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1','2','3','4','5','6','7','8','9','10','11','12');
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1.0','2.0','3.0','4.0','5.0','6.0','7.0','8','9','10','11','12');
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1.0','2.0','3.0','4.0','5.0','6.0','7.0','8','9','10','11','12','13','14');
select * from users;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1.0','2.0','3.0','4.0','5.0','6.0','7.0','8','9','10','11','12','13','19');
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1.0','2.0','3.0','4.0','5.0','6.0','7.0','8','9','10','11','12','13',19);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm, RAW_CO, RAW_SO2, RAW_NO2, RAW_O3,air_id, AQI_PM, AQI_CO, AQI_NO2, AQI_SO2, AQI_O3, sensor_dev_id) values('2019-02-17 07:11:39','1.0','2.0','3.0','4.0','5.0','6.0','7.0','8','9','10','11','12','13','19');
show databases
;
use teamb-2019winter
select * from users;
delete from users where user_seq_num='21'
;
select * from users;
delete from users where user_seq_num='22'
;
delete from users where user_seq_num='23';
delete from users where user_seq_num='24';
delete from users where user_seq_num='25';
delete from users where user_seq_num='26';
delete from users where user_seq_num='27';
delete from users where user_seq_num='28';
delete from users where user_seq_num='29';
delete from users where user_seq_num='30';
delete from users where user_seq_num='31';
select * from users;
show tables;
show columns from heart_sensor;
show databases;
drop table heart_sensor;
show tables;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`heart_sensor` (
  `heart_date` DATETIME NOT NULL,
  `heart_rate` INT NOT NULL,
  `heart_id` INT NOT NULL AUTO_INCREMENT,
  `heart_lat` DOUBLE NOT NULL,
  `heart_log` DOUBLE NOT NULL,
  `users_user_seq_num` INT NOT NULL,
  PRIMARY KEY (`heart_id`),
  INDEX `fk_heart_sensor_users1_idx` (`users_user_seq_num` ASC) VISIBLE,
  CONSTRAINT `fk_heart_sensor_users1`
    FOREIGN KEY (`users_user_seq_num`)
    REFERENCES `teamb-2019winter`.`users` (`user_seq_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`heart_sensor` (
  `heart_date` DATETIME NOT NULL,
  `heart_rate` INT NOT NULL,
  `heart_id` INT NOT NULL AUTO_INCREMENT,
  `heart_lat` DOUBLE NOT NULL,
  `heart_log` DOUBLE NOT NULL,
  `users_user_seq_num` INT NOT NULL,
  PRIMARY KEY (`heart_id`),
  INDEX `fk_heart_sensor_users1_idx` (`users_user_seq_num` ASC) ,
  CONSTRAINT `fk_heart_sensor_users1`
    FOREIGN KEY (`users_user_seq_num`)
    REFERENCES `teamb-2019winter`.`users` (`user_seq_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`heart_sensor` (   `heart_date` DATETIME NOT NULL,   `heart_rate` INT NOT NULL,   `heart_id` INT NOT NULL AUTO_INCREMENT,   `heart_lat` DOUBLE NOT NULL,   `heart_log` DOUBLE NOT NULL,   `users_user_seq_num` INT NOT NULL,   PRIMARY KEY (`heart_id`),   INDEX `fk_heart_sensor_users1_idx` (`users_user_seq_num` ASC) ,   CONSTRAINT `fk_heart_sensor_users1`     FOREIGN KEY (`users_user_seq_num`)     REFERENCES `teamb-2019winter`.`users` (`user_seq_num`)     ON DELETE NO ACTION     ON UPDATE NO ACTION) ENGINE = InnoDB;
show columns from heart_sensor;
show tables;
show columns from sensor;
insert into sensor(mac_addr,dev_name,users_user_seq_num
;
select * from users;
insert into sensor(mac_addr,dev_name,users_user_seq_num) value ('ff:ff:ff:ff','a','103');
select * from sensor;
show columns from air_sensor;
INSERT INTO air_sensor (air_date, lat, log, RAW_pm,RAW_CO,RAW_SO2,RAW_NO2,RAW_O3,AQI_PM,AQI_CO,AQI_NO2,AQI_SO2,AQI_O3,sensor_dev_id) values ('2019-02-19 21:34:05', '25.0', '25.0', ?, ?, ?, ?, ?,1,1,1,1,1,2);
INSERT INTO air_sensor (air_date, lat, log, RAW_pm,RAW_CO,RAW_SO2,RAW_NO2,RAW_O3,AQI_PM,AQI_CO,AQI_NO2,AQI_SO2,AQI_O3,sensor_dev_id) values ('2019-02-19 21:34:05', '25.0', '25.0', 1.1, 1.1, 1.1, 1.1, 1.1,1,1,1,1,1,2);
select * from air_sensor;
delete from air_sensor;
show databases;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (
  `air_date` DATETIME NOT NULL,
  `lat` DOUBLE NOT NULL,
  `lon` DOUBLE NOT NULL,
  `RAW_pm` DOUBLE NOT NULL,
  `RAW_CO` DOUBLE NOT NULL,
  `RAW_SO2` DOUBLE NOT NULL,
  `RAW_NO2` DOUBLE NOT NULL,
  `RAW_O3` DOUBLE NOT NULL,
  `air_id` INT NOT NULL AUTO_INCREMENT,
  `AQI_PM` INT NOT NULL,
  `AQI_CO` INT NOT NULL,
  `AQI_NO2` INT NOT NULL,
  `AQI_SO2` INT NOT NULL,
  `AQI_O3` INT NOT NULL,
  `sensor_dev_id` INT NOT NULL,
  PRIMARY KEY (`air_id`),
  INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,
  CONSTRAINT `fk_air_sensor_sensor1`
    FOREIGN KEY (`sensor_dev_id`)
    REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (   `air_date` DATETIME NOT NULL,   `lat` DOUBLE NOT NULL,   `lon` DOUBLE NOT NULL,   `RAW_pm` DOUBLE NOT NULL,   `RAW_CO` DOUBLE NOT NULL,   `RAW_SO2` DOUBLE NOT NULL,   `RAW_NO2` DOUBLE NOT NULL,   `RAW_O3` DOUBLE NOT NULL,   `air_id` INT NOT NULL AUTO_INCREMENT,   `AQI_PM` INT NOT NULL,   `AQI_CO` INT NOT NULL,   `AQI_NO2` INT NOT NULL,   `AQI_SO2` INT NOT NULL,   `AQI_O3` INT NOT NULL,   `sensor_dev_id` INT NOT NULL,   PRIMARY KEY (`air_id`),   INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,   CONSTRAINT `fk_air_sensor_sensor1`     FOREIGN KEY (`sensor_dev_id`)     REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)     ON DELETE NO ACTION     ON UPDATE NO ACTION) ENGINE = InnoDB;
show tables;
drop table from air_sensor;
drop table air_sensor;
show tables;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (
  `air_date` DATETIME NOT NULL,
  `lat` DOUBLE NOT NULL,
  `lon` DOUBLE NOT NULL,
  `RAW_pm` DOUBLE NOT NULL,
  `RAW_CO` DOUBLE NOT NULL,
  `RAW_SO2` DOUBLE NOT NULL,
  `RAW_NO2` DOUBLE NOT NULL,
  `RAW_O3` DOUBLE NOT NULL,
  `air_id` INT NOT NULL AUTO_INCREMENT,
  `AQI_PM` INT NOT NULL,
  `AQI_CO` INT NOT NULL,
  `AQI_NO2` INT NOT NULL,
  `AQI_SO2` INT NOT NULL,
  `AQI_O3` INT NOT NULL,
  `sensor_dev_id` INT NOT NULL,
  PRIMARY KEY (`air_id`),
  INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,
  CONSTRAINT `fk_air_sensor_sensor1`
    FOREIGN KEY (`sensor_dev_id`)
    REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (   `air_date` DATETIME NOT NULL,   `lat` DOUBLE NOT NULL,   `lon` DOUBLE NOT NULL,   `RAW_pm` DOUBLE NOT NULL,   `RAW_CO` DOUBLE NOT NULL,   `RAW_SO2` DOUBLE NOT NULL,   `RAW_NO2` DOUBLE NOT NULL,   `RAW_O3` DOUBLE NOT NULL,   `air_id` INT NOT NULL AUTO_INCREMENT,   `AQI_PM` INT NOT NULL,   `AQI_CO` INT NOT NULL,   `AQI_NO2` INT NOT NULL,   `AQI_SO2` INT NOT NULL,   `AQI_O3` INT NOT NULL,   `sensor_dev_id` INT NOT NULL,   PRIMARY KEY (`air_id`),   INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,   CONSTRAINT `fk_air_sensor_sensor1`     FOREIGN KEY (`sensor_dev_id`)     REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)     ON DELETE NO ACTION     ON UPDATE NO ACTION) ENGINE = InnoDB;
show tables;
show columns from air_sensor;
drop table air_sensor;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (
  `air_date` DATETIME NOT NULL,
  `lat` DOUBLE NOT NULL,
  `lon` DOUBLE NOT NULL,
  `RAW_PM` DOUBLE NOT NULL,
  `RAW_CO` DOUBLE NOT NULL,
  `RAW_SO2` DOUBLE NOT NULL,
  `RAW_NO2` DOUBLE NOT NULL,
  `RAW_O3` DOUBLE NOT NULL,
  `air_id` INT NOT NULL AUTO_INCREMENT,
  `AQI_PM` INT NOT NULL,
  `AQI_CO` INT NOT NULL,
  `AQI_NO2` INT NOT NULL,
  `AQI_SO2` INT NOT NULL,
  `AQI_O3` INT NOT NULL,
  `sensor_dev_id` INT NOT NULL,
  PRIMARY KEY (`air_id`),
  INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,
  CONSTRAINT `fk_air_sensor_sensor1`
    FOREIGN KEY (`sensor_dev_id`)
    REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE TABLE IF NOT EXISTS `teamb-2019winter`.`air_sensor` (   `air_date` DATETIME NOT NULL,   `lat` DOUBLE NOT NULL,   `lon` DOUBLE NOT NULL,   `RAW_PM` DOUBLE NOT NULL,   `RAW_CO` DOUBLE NOT NULL,   `RAW_SO2` DOUBLE NOT NULL,   `RAW_NO2` DOUBLE NOT NULL,   `RAW_O3` DOUBLE NOT NULL,   `air_id` INT NOT NULL AUTO_INCREMENT,   `AQI_PM` INT NOT NULL,   `AQI_CO` INT NOT NULL,   `AQI_NO2` INT NOT NULL,   `AQI_SO2` INT NOT NULL,   `AQI_O3` INT NOT NULL,   `sensor_dev_id` INT NOT NULL,   PRIMARY KEY (`air_id`),   INDEX `fk_air_sensor_sensor1_idx` (`sensor_dev_id` ASC) ,   CONSTRAINT `fk_air_sensor_sensor1`     FOREIGN KEY (`sensor_dev_id`)     REFERENCES `teamb-2019winter`.`sensor` (`dev_id`)     ON DELETE NO ACTION     ON UPDATE NO ACTION) ENGINE = InnoDB;
select * from air_sensor;
show databases;
use teamb-2019winter;
show tables;
show databases;
use teamb-2019winter
show tables;
select * from air_sensor;
ders air_sensor;
decr air_sensor;
ders air_sensor;
select * from air_sensor;
SELECT * FROM air_sensor WHERE sensor_dev_id =2 AND (air_date between '2019-02-20' AND '2019-02-21');
SELECT * FROM air_sensor WHERE sensor_dev_id =2 AND (air_date between '2019-02-20%' AND '2019-02-21%');
select * from sensor;
select * from users;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
select * from air_sensor where air_id not in (select TOP (select count(1)-1 from air_sensor) air_id from air_sensor);
SELECT LAST_VALUE(temperature) OVER (PARTITION BY temperature ORDER BY air_sensor);
select * from air_sensor where [air_id] = all (select max([air_id]) from air_sensor);
select * from air_sensor where [air_id] = all (select max([air_id]) from air_sensor)
;
select * from air_sensor where air_id = (select max(air_id) from air_sensor);
select * from air_sensor order by air_id;
select * from air_sensor where rownum=1;
select * from air_sensor order by air_id desc;
select * from air_sensor=select * from sensor where users_user_seq_num=? order by air_id desc;
show databses;
show databases;
use teamb-2019winter;
show tables;
select * from heart_sensor;
select * from air_sensor;
delete from air_sensor;
select * from heart_sensor;
delete from air_sensor;
select * from users;
select * from air_sensor;
SELECT * FROM air_sensor where sensor_dev_id = 2 ORDER BY air_date DESC LIMIT 100;
select * from air_sensor;
select * from air_sensor where between air_date = 2019-02-22 and 2019-02-22;
select * from air_sensor where air_date between 2019-02-22 and 2019-02-22;
select * from air_sensor where air_date between '2019-02-22' and '2019-02-22';
select * from air_sensor where air_date between '2019-02-21' and '2019-02-22';
select * from air_sensor where air_date between '2019-02-22' and '2019-02-23';
select * from air_sensor where air_date between '2019-02-22' and '2019-02-22';
select * from air_sensor where air_date between '2019-02-22' and '2019-02-23';
select * from air_sensor where air_date between '2019-02-22%' and '2019-02-22%';
select * from heart_sensor;
delete from heart_sensor where heart_rate=0;
select * from heart_sensor;
select * from users;
select * from heart_sensor;
select * from air_sensor;
delete * from air_sensor;
delete from air_sensor;
select * from air_sensor;
select * from users;
delete from users where user_seq_num=111;
select * from users;
delete from users where user_seq_num=112;
select * from users;
delete from users where user_seq_num=110;
select * from users;
select * from air_sensor;
select * from users;
delete from users where user_seq_num=113;
select * from users;
select * from air_sensor;
select * from users;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
select * from heart_sensor;
select * from users;
delete from users where user_seq_num=114;
delete from users where user_seq_num=114 cascade constraints purge;
delete from users where user_seq_num=114 CASCADE CONSTRAINTS PURGE;
select * from users;
select * from heart_sensor
;
select * from heart_sensor
;
select * from heart_sensor;
select * from air_sensor;4
4 select * from air_sensor;
select * from air_sensor;
4 select * from air_sensor;
select * from air_sensor;
select * from heart_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
select * from heart_sensor;
delete from heart_sensor;
select * from heart_sensor;
delete from heart_sensor;
select * from air_sensor;
select * from heart_sensor;
select * from air_sensor;
delete from heart_sensor;
select * from air_sensor;
delete from air_sensor;
select * from air_sensor;
select * from heart_sensor;
delete from heart_sensor;
select * from users;
select * from air_data;
select * from air_sensor;
Select Convert(Time, GetDate())
;
Select Convert(Time, GetDate())
;
Select Convert(Time, GetDate());
select * from air_sensor;
SELECT * FROM events
    WHERE `air_date` >= NOW()
      AND `air_date`  < NOW() + INTERVAL 10 MINUTE;
SELECT * FROM events     WHERE `air_date` >= NOW()       AND `air_date`  < NOW() + INTERVAL 10 MINUTE;
SELECT * FROM air_sensor  WHERE `air_date` >= NOW()       AND `air_date`  < NOW() + INTERVAL 10 MINUTE;
SELECT * FROM air_sensor  WHERE `air_date` >= NOW()  AND `air_date` < NOW() + INTERVAL 10 MIN;
SELECT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date`  < NOW() + INTERVAL 10 MINUTE;
SELECT DISTINCT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date`  < NOW() + INTERVAL 10 MINUTE;
SELECT DISTINCT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date`  < NOW();
SELECT DISTINCT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date`  <= NOW();
SELECT DISTINCT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date` <= NOW();
SELECT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date` <= NOW() GROUP BY sensor_dev_id;
SELECT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date` <= NOW() GROUP BY sensor_dev_id ORDER BY air_date desc;
SELECT * FROM air_sensor  WHERE `air_date` >= "2019-02-23 14:00:00" AND `air_date` <= NOW() GROUP BY sensor_dev_id ORDER BY sensor_dev_id desc;
